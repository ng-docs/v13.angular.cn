{"id":"api/animations/transition","title":"transition","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/animations\", \"name\": \"@angular/animations\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/animations/transition\", \"name\": \"transition\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/animations\">@angular/animations</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/aio/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20请简述你的修改...#L1292-L1452\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/13.2.0-next.1/packages/animations/src/animation_metadata.ts#L1292-L1452\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"transition\">transition<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#transition\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p translation-result=\"on\">声明一个转场动画，以便在满足给定条件时运行一系列动画步骤。该条件是一个逻辑型表达式或一个函数，\n该函数比较以前和现在的动画状态，如果应该开始转场则返回 <code>true</code>。\n当满足所定义的转场动画的状态标准时，就会开始执行相关的动画。</p><p translation-origin=\"off\">Declares an animation transition which is played when a certain specified condition is met.</p>\n\n\n  </section>\n\n  <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <span class=\"member-name\"><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></span>(stateChangeExpr: string | ((fromState: string, toState: string, element?: any, params?: { [key: string]: any; }) => boolean), steps: <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[], options: <a href=\"api/animations/AnimationOptions\" class=\"code-anchor\">AnimationOptions</a> = null): <a href=\"api/animations/AnimationTransitionMetadata\" class=\"code-anchor\">AnimationTransitionMetadata</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>stateChangeExpr</code>\n      </td>\n      <td class=\"param-type\"><code>string | ((fromState: string, toState: string, element?: any, params?: { [key: string]: any; }) => boolean)</code></td>\n      <td class=\"param-description\">\n        <p>A string with a specific format or a function that specifies when the\nanimation transition should occur (see <a href=\"api/animations/transition#state-change-expression\">State Change Expression</a>).</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>steps</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>One or more animation objects that represent the animation's instructions.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/animations/AnimationOptions\" class=\"code-anchor\">AnimationOptions</a></code></td>\n      <td class=\"param-description\">\n        <p>An options object that can be used to specify a delay for the animation or provide\ncustom parameters for it.</p>\n\n        <p>可选值。默认值为 <code>null</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p translation-result=\"on\">一个封装了转场数据的对象。</p><p translation-origin=\"off\"><code><a href=\"api/animations/AnimationTransitionMetadata\" class=\"code-anchor\">AnimationTransitionMetadata</a></code>: An object that encapsulates the transition data.</p>\n\n\n</div>\n\n\n\n\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"state-change-expression\">State Change Expression<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#state-change-expression\"><i class=\"material-icons\">link</i></a></h3>\n<p>The State Change Expression instructs Angular when to run the transition's animations, it can\neither be</p>\n<ul>\n<li>a string with a specific syntax</li>\n<li>or a function that compares the previous and current state (value of the expression bound to\nthe element's trigger) and returns <code>true</code> if the transition should occur or <code>false</code> otherwise</li>\n</ul>\n<p>The string format can be:</p>\n<ul>\n<li>\n<p><code>fromState => toState</code>, which indicates that the transition's animations should occur then the\nexpression bound to the trigger's element goes from <code>fromState</code> to <code>toState</code></p>\n<p><em>Example:</em></p>\n<code-example language=\"typescript\">\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open => closed', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: 0 }) ))\n</code-example>\n</li>\n<li>\n<p><code>fromState &#x3C;=> toState</code>, which indicates that the transition's animations should occur then\nthe expression bound to the trigger's element goes from <code>fromState</code> to <code>toState</code> or vice versa</p>\n<p><em>Example:</em></p>\n<code-example language=\"typescript\">\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('enabled &#x3C;=> disabled', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s cubic-bezier(0.8,0.3,0,1)'))\n</code-example>\n</li>\n<li>\n<p><code>:enter</code>/<code>:leave</code>, which indicates that the transition's animations should occur when the\nelement enters or exists the DOM</p>\n</li>\n</ul>\n<code-example language=\"typescript\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':enter', [\n         <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n         <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('500ms', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1 }))\n       ])\n     ```\n\n - `:increment`/`:decrement`, which indicates that the <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>'s animations should occur when\n   the numerical expression bound to the <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>'s element has increased in value or decreased\n\n   _Example:_\n     ```typescript\n       <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':increment', <a href=\"api/animations/query\" class=\"code-anchor\">query</a>('@counter', <a href=\"api/animations/animateChild\" class=\"code-anchor\">animateChild</a>()))\n     ```\n\n - a <a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a> of any of the above divided by commas, which indicates that <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>'s animations\n   should occur whenever one of the state change expressions matches\n\n   _Example:_\n     ```typescript\n       <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':increment, * => enabled, :enter', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s ease', <a href=\"api/animations/keyframes\" class=\"code-anchor\">keyframes</a>([\n         <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ transform: 'scale(1)', offset: 0}),\n         <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ transform: 'scale(1.1)', offset: 0.7}),\n         <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ transform: 'scale(1)', offset: 1})\n       ]))),\n     ```\n\nAlso note that in such context:\n - `void` can be used to indicate the absence of the element\n - asterisks can be used as wildcards that match any state\n - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n   equivalent to `:leave`)\n - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n   _truthy_ and _falsy_ values)\n\n&#x3C;div class=\"alert is-helpful\">\n\n Be careful about entering end leaving elements as their transitions present a common\n pitfall for developers.\n\n Note that when an element with a <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a> enters the DOM its `:enter` <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> always\n gets executed, but its `:leave` <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> will not be executed if the element is removed\n alongside its parent (as it will be removed \"without warning\" before its <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> has\n a chance to be executed, the only way that such <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> can occur is if the element\n is exiting the DOM on its own).\n\n\n&#x3C;/div>\n\n### Animating to a Final State\n\n### 把动画播放到最终状态\n\nIf the final step in a <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> is a call to `<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()` that uses a timing value\nwith no `<a href=\"api/animations/style\" class=\"code-anchor\">style</a>` data, that step is automatically considered the final <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> arc,\nfor the element to reach the final state, in such case Angular automatically adds or removes\nCSS styles to ensure that the element is in the correct final state.\n\n\n### Usage Examples\n\n - Transition animations applied based on\n   the <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>'s expression value\n\n  ```HTML\n  &#x3C;div [@myAnimationTrigger]=\"myStatusExp\">\n   ...\n  &#x3C;/div>\n</code-example>\n<code-example language=\"typescript\">\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\"myAnimationTrigger\", [\n  ..., // states\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on => off, open => closed\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)),\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"* &#x3C;=> error\", <a href=\"api/animations/query\" class=\"code-anchor\">query</a>('.indicator', <a href=\"api/animations/animateChild\" class=\"code-anchor\">animateChild</a>()))\n])\n</code-example>\n<ul>\n<li>\n<p>Transition animations applied based on custom logic dependent\non the trigger's expression value and provided parameters</p>\n<code-example language=\"HTML\">\n&#x3C;div [@myAnimationTrigger]=\"{\n value: stepName,\n params: { target: currentTarget }\n}\">\n ...\n&#x3C;/div>\n</code-example>\n<code-example language=\"typescript\">\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\"myAnimationTrigger\", [\n  ..., // states\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\n    (fromState, toState, _element, params) =>\n      ['firststep', 'laststep'].includes(fromState.toLowerCase())\n      &#x26;&#x26; toState === params?.['target'],\n    <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s')\n  )\n])\n</code-example>\n</li>\n</ul>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationMetadataType\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/group\n - api/animations/query\n - api/animations/sequence\n - api/animations/stagger\n - api/animations/state\n - api/animations/trigger\n - api/core/Component\n - guide/animations\n - guide/complex-animation-sequences\n - guide/elements\n - guide/reusable-animations\n - guide/route-animations\n - guide/router-tutorial-toh\n - guide/transition-and-triggers\n-->\n<!-- links from this doc:\n - /api\n - api/animations\n - api/animations/AnimationMetadata\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/animateChild\n - api/animations/animation\n - api/animations/keyframes\n - api/animations/query\n - api/animations/sequence\n - api/animations/style\n - api/animations/transition#state-change-expression\n - api/animations/transition#transition\n - api/animations/transition#usage-notes\n - api/animations/trigger\n - https://github.com/ng-docs/angular-cn/edit/aio/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20请简述你的修改...#L1292-L1452\n - https://github.com/ng-docs/angular-cn/tree/13.2.0-next.1/packages/animations/src/animation_metadata.ts#L1292-L1452\n-->"}